# siduxcc-module: network
# Copyright (c) 2007 Fabian Wuertz
# License GPL 2
# siduxcc is based on 
# knxcc from Andreas Loibl


#run gettext
. /usr/bin/gettext.sh

register_module network $(eval_gettext "Network")


IFS_SP=" "
IFS_NL="$(echo -e "\n")"
IFS_CR="$(echo -e "\r")"

TMP="$(mktemp -t siduxcc_network.XXXXXX)"
iface_temp="$(mktemp -t siduxcc_network.iface.XXXXXX)"


#------------------------------------------------------------------------------#
#--- hostname -----------------------------------------------------------------#
#------------------------------------------------------------------------------#


function getHostname()
{
	hostname
}

function setHostname()
{
	hostname $1
}


function dlgHostname()
{
	oldHostname="$(getHostname)"
	newHostname=$(dlg --inputbox "$(eval_gettext "Enter a new hostname:")" 0 0 "$oldHostname")
	if [ $? -eq 0 ]; then
		setHostname $newHostname \
		&& dlg --msgbox "$(eval_gettext "The hostname have been changed successfully to $newHostname.")" \
		|| dlg --msgbox "$(eval_gettext "An error occurred while changing the hosntame to $newHostname!")"
	fi
}

#------------------------------------------------------------------------------#
#--- nameservers --------------------------------------------------------------#
#------------------------------------------------------------------------------#

function getNameservers()
{
	awk '{if($1=="nameserver"){print $2}}' /etc/resolv.conf
}

function setNameservers()
{
	> /etc/resolv.conf
	while (($#))
	do
		echo nameserver "$1" >> /etc/resolv.conf
		shift
	done
}

#------------------------------------------------------------------------------#
#--- overview -----------------------------------------------------------------#
#------------------------------------------------------------------------------#

function getOverview()
{
	DV=$1

	run=$(grep $DV /etc/network/run/ifstate)
	ip=$(/sbin/ifconfig $DV | grep "inet addr" | gawk -F: '{print $2}' | gawk '{print $1}')

	method=$(Ceni_read_config --iface $DV | grep "method," | cut -f2 -d,)
	class=$(Ceni_read_config --iface $DV | grep "class,"  | cut -f2 -d,)

	if [ "$class" = "allow-hotplug" ]; then
		class="hotplug"
	fi


	if [ -z $run ]; then 
		run="inactiv";
	else
		run="activ";
	fi

	echo $run,$ip,$method,$class
}


#------------------------------------------------------------------------------#
#--- fw-detect ----------------------------------------------------------------#
#------------------------------------------------------------------------------#

function installWlanCard()
{
	fw-detect -i "$1"

	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}


#------------------------------------------------------------------------------#
#--- console interface --------------------------------------------------------#
#------------------------------------------------------------------------------#


function network_interface()
{
	while true;
	do
		network=$(dlg --menu "$(eval_gettext "Network")" 0 0 0 \
			"ceni"       "$(eval_gettext "Configure network cards")" \
			"hostname"  "$(eval_gettext "Set hostname")" \
			"return"     "$(eval_gettext "Return to main menu")" )
	
		case $network in
			ceni)      ceni;;
			hostname)  dlgHostname;;

			return|"") break;;
			*) dlg --msgbox "$(eval_gettext "Error: This module is not implemented yet!")";;
		esac
	done
}
