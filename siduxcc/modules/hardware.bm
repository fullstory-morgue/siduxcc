# siduxcc-module: hardware
# Copyright (c) 2007 Fabian Wuertz
# License GPL 2
# this file is based on fw-detect from Kel Modderman <kel@otaku42.de>

#run gettext
. /usr/bin/gettext.sh

register_module hardware $(eval_gettext "Hardware")

function detect()
{
	# look for atheros hardware
	if find /sys/devices/ -type f -name vendor -print0 | xargs -0 grep -s -q '0x168c'; then
		echo "Atheros PCI wireless card"
	fi

	# check modules have required firmware
	for d in /sys/bus/*/drivers/*; do
		[[ -d ${d} ]] && driver=${d##*/} || driver=
		case "${driver}" in
			acx*|atmel*|at76_usb|bcm43xx*|ipw2100|ipw2200|iwl3945|iwl4965|prism54|rt61*|rt73*|zd1201|zd1211*)
				echo $driver;;
		esac
	done

}


function allDevices()
{
	echo "Atheros PCI wireless card"
	echo acx
	echo atmel
	echo at76_usb
	echo bcm43xx
	echo ipw2100
	echo ipw2200
	echo iwl3945
	echo iwl4965
	echo prism54
	echo rt61
	echo rt73
	echo zd1201
	echo zd1211
}

function install()
{
	# install atheros hardware
	if [ "$1" = "Atheros PCI wireless card" ]; then
		apt-get update
		module-assistant --text-mode --non-inter auto-install madwifi
		modprobe ath_pci
	fi


	driver=$1
	case "${driver}" in
		acx*)
			fw="http://acx100.sourceforge.net/wiki/Firmware"
			fw_url="http://www.kazer.org/acx-firmware-20060207.tar.bz2"
			;;
		atmel*|at76_usb)
			fw="apt-get install atmel-firmware"
			;;
		bcm43xx*)
			fw="apt-get install bcm43xx-fwcutter"
			;;
		ipw2100|ipw2200)
			fw="apt-get install ${driver}-firmware"
			;;
		iwl3945|iwl4965)
			fw="apt-get install firmware-iwlwifi"
			;;
		prism54)
			fw="http://prism54.org/firmware/"
			;;
		rt61*)
			fw="apt-get install rt61-fwcutter"
			;;
		rt73*)
			fw="http://www.ralinktech.com/ralink/Home/Support/Linux.html"
			fw_url="http://www.ralinktech.com.tw/data/RT71W_Firmware_V1.8.zip"
			;;
		zd1201)
			fw="http://linux-lc100020.sourceforge.net/"
			fw_url="http://prdownloads.sourceforge.net/linux-lc100020/zd1201-0.14-fw.tar.gz?download"
			;;
		zd1211*)
			fw="apt-get install zd1211-firmware"
			;;
	esac

	case "${fw}" in
		apt-get*)
			#apt-get update
			${fw}
			modprobe -r ${driver}
			modprobe ${driver}
			;;
		http*)
			echo "#"
			echo "# Detected driver that requires firmware to operate."
			echo "# There is no readily available firmware package for ${driver}"
			echo "# Visit the following page for information on how to obtain and"
			echo "# install the required firmware:"
			echo "#   ${fw}"
			if [[ ${fw_url} ]]; then
				echo "#"
				echo "# You can obtain the firmware for ${driver} directly from:"
				echo "#   ${fw_url}"
				echo "#"
				echo "# Download the archive and uncompress it. Copy the contents to:"
				echo "#   /lib/firmware/"
			fi
			echo "#"
			echo "# Once the firmware files have been installed, the ${driver} must be"
			echo "# reloaded to activate the hardware. Use the following commands:"
			echo "#"
			echo "modprobe -r ${driver}"
			echo "modprobe ${driver}"
			echo ""
			;;
	esac

	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read

}

function addSources()
{
	# this function adds sources to install non-free firmware
	# this function is based on install-meta from Horst Tritremmel <hjt@sidux.com>

	[ -z "$(grep deb\ .*debian\.org.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb \(.*\)debian.org\/debian unstable \(.*\)/deb \1debian.org\/debian unstable main contrib non-free/' /etc/apt/sources.list || echo found deb *contrib in sources.list for debian

	[ -z "$(grep deb\ .*debian\.org.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb \(.*\)debian.org\/debian\/ sid \(.*\)/deb \1debian.org\/debian\/ sid main contrib non-free/' /etc/apt/sources.list || echo found deb *contrib in sources.list for debian

	[ -z "$(grep deb-src\ .*debian\.org.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb-src \(.*\)debian.org\/debian unstable \(.*\)/deb-src \1debian.org\/debian unstable main contrib non-free/' /etc/apt/sources.list || echo found deb-src *contrib in sources.list for debian

	[ -z "$(grep deb-src\ .*debian\.org.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb-src \(.*\)debian.org\/debian\/ sid \(.*\)/deb-src \1debian.org\/debian\/ sid main contrib non-free/' /etc/apt/sources.list || echo found deb-src *contrib in sources.list for debian

	[ -z "$(grep deb\ .*sidux\.com.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb \(.*\)sidux.com\/debian\/ sid \(.*\)/deb \1sidux.com\/debian\/ sid main contrib non-free firmware fix.main fix.contrib fix.non-free/' /etc/apt/sources.list || echo found deb *contrib in sources.list for sidux

	[ -z "$(grep deb-src\ .*sidux\.com.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb-src \(.*\)sidux.com\/debian\/ sid \(.*\)/deb-src \1sidux.com\/debian\/ sid main contrib non-free firmware fix.main fix.contrib fix.non-free/' /etc/apt/sources.list || echo found deb-src *contrib in sources.list for sidux
}



function hardware_interface()
{
	while true;
	do
		hardware=$(dlg --menu "$(eval_gettext "Hardware"):" 0 0 0 \
			"return"   "$(eval_gettext "Return to main Menu")" )

		case $hardware in
			return|"") break;;
		esac
	done
}

