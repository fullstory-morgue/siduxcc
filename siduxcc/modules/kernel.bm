# siduxcc-module: kernel
# Copyright (c) 2007 Fabian Wuertz
# License GPL 2
# siduxcc is based on knxcc from Andreas Loibl

#run gettext
. /usr/bin/gettext.sh

register_module kernel $(eval_gettext "Kernel")


function removeKernel()
{
	# check if kernel-remover is installed
	if [ ! -f /usr/sbin/kernel-remover ]; then
		read -p "$(eval_gettext "Kernel-remover is missing! Do you want do install it?") <yes/no>"
		if [ "$REPLY" = "yes" ]; then
			apt-get update
			apt-get install sidux-kernelhacking
			kernel-remover -x $1
		fi
	else
		kernel-remover -x $1
	fi

	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}


function currentKernel()
{
	uname -r | cut -f2 -d-
}

function kernelType()
{
	if [ -n "$(uname -r | grep 686)" ]; then
		echo 686
	elif [ -n "$(uname -r | grep amd64)" ]; then
		echo amd64
	fi
}


function stableKernel()
{
	wget -U "siduxcc-hermes" -O - http://sidux.com/debian/pool/main/l/linux-sidux-2.6/ 2>/dev/null | grep -m 3 "linux-image" | tail -n 1 | cut -f4 -d"-"
}


function stableKernelFull()
{
	wget -U "siduxcc-hermes" -O - http://sidux.com/debian/pool/main/l/linux-sidux-2.6/ 2>/dev/null | grep -m 3 "linux-image" | tail -n 1 | cut -f3-5 -d"-"
}

function stableKernel3()
{
	wget -U "siduxcc-hermes" -O - http://sidux.com/debian/pool/main/l/linux-sidux-2.6/ 2>/dev/null | grep -m 3 "linux-image" | tail -n 1 | cut -f3-6 -d"-" | cut -f1 -d_
}

function experimentalKernel()
{
	TMP="$(mktemp -p /tmp/ experimentalKernel-XXXXXXXXXX)"
	wget --timeout=3 -O $TMP -q -U "siduxcc-hermes" http://debian.tu-bs.de/project/sidux/kernel/experimental/
	if [ "$(cat $TMP)" == "" ]; then
		echo "no_connection"
	else
		egrep $(kernelType) $TMP | cut -f3 -d">" | awk '{print (substr($1,8,length($1)-14))}'
	fi
	rm -f $TMP
}


installKernel()
{
	# $1: type, stable, experimental

	tmp=$(stableKernel3)

	case $1 in
			stable)
				apt-get update
				apt-get install -s linux-image-$tmp linux-headers-$tmp
				;;
			experimental) echo "na";;
	esac

	echo ""
	echo "$(eval_gettext "The installation is finished!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read

}


getModules()
{
	wget -U "siduxcc-hermes" -O - http://sidux.com/debian/pool/main/l/linux-modules-sidux-main-2.6 2>/dev/null | grep 2.6-sidux-686 | cut -f8 -d"\"" | cut -f1 -d. | sed 's/-modules-2//g'
}


installModules()
{
	apt-get install $@

	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}


dlgInstallKernel()
{
	
	nKernel=$(newestKernel)
	eKernel=$(experimentalKernel)
	cKernel=$(currentKernel)

	choice=$(dlg --menu "$(eval_gettext "Select a kernel")" 0 0 0 "newest" "$nKernel" "experimental" "$eKernel" )

	if [ $? -eq 0 ]; then

		case $choice in
			newest) sKernel=$nKernel;;
			experimental) sKernel=$eKernel;;
		esac

		if [ $skernel =  $cKernel ]; then
			dlg --msgbox "$(eval_gettext "The versions of the new and the current Kernel are the same!")"
		else

			case $choice in
				newest) installKernel $sKernel;;
				experimental) installKernel $sKernel exp;;
			esac
		fi
	fi

}


function getOldKernels()
{
	pushd /boot 2>&1 >>/dev/null
	for v in vmlinuz-*; do
		Kernel=$(echo $v|sed s/vmlinuz-//)
		if [ "${Kernel}" != "$(uname -r)" ]; then
			echo $Kernel
		fi
	done
	popd 2>&1 >> /dev/null
}


function getKernelDirs()
{
	if [ -d /usr/src/kernel-downloads ]; then
		cd /usr/src/kernel-downloads
		ls -d */
	fi
}

function kernel_interface()
{
	while true;
	do
		kernel=$(dlg --menu "$(eval_gettext "Kernel"): $(currentKernel)" 0 0 0 \
			"remover"  "$(eval_gettext "Run kernel-remover")" \
			"update" "$(eval_gettext "Update kernel")" \
			"return"   "$(eval_gettext "Return to main menu")" )

		case $kernel in
			remover) kernel-remover;;
			update)  dlgInstallKernel;;
			return|"") break;;
		esac
	done
}



