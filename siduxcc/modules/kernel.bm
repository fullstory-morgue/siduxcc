# siduxcc-module: kernel
# Copyright (c) 2007 Fabian Wuertz
# License GPL 2
# siduxcc is based on knxcc from Andreas Loibl

#run gettext
. /usr/bin/gettext.sh

register_module kernel $(eval_gettext "Kernel")


function removeKernel()
{
	# check if kernel-remover is installed
	if [ ! -f /usr/sbin/kernel-remover ]; then
		read -p "$(eval_gettext "kernel-remover is missing! Do you want do install it?") <yes/no>"
		if [ "$REPLY" = "yes" ]; then
			apt-get update
			apt-get install sidux-kernelhacking
			kernel-remover -x $1
		fi
	else
		kernel-remover -x $1
	fi

	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}


function currentKernel()
{
	uname -r
}

function kernelType()
{
	if [ -n "$(uname -r | grep 686)" ]; then
		echo 686
	elif [ -n "$(uname -r | grep amd64)" ]; then
		echo amd64
	fi
}


function stableKernel()
{
	wget -U "siduxcc-hermes" -O - http://sidux.com/debian/pool/main/l/linux-sidux-2.6/ 2>/dev/null | grep linux-image | grep $(kernelType) | tail -n 1 | cut -f8 -d\" | cut -f1 -d_ | cut -f3- -d-
}


installKernel()
{

	tmp=$(stableKernel)

	if [ "$tmp" == "$(uname -r)" ]; then
		echo "The versions of the new and the current kernel are the same!"
	else
		apt-get update
		apt-get install linux-image-$tmp linux-headers-$tmp
	fi

	echo ""
	echo "$(eval_gettext "The installation is finished!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read

}


getModules()
{
	wget -U "siduxcc-hermes" -O - http://sidux.com/debian/pool/main/l/linux-modules-sidux-main-2.6 2>/dev/null | grep 2.6-sidux-686 | cut -f8 -d"\"" | cut -f1 -d. | sed 's/-modules-2//g'
}


installModules()
{
	apt-get install $@

	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}



metapackageStatus()
{
	if [ -f /usr/share/doc/linux-image-2.6-sidux-686/copyright ]; then
		if [ "$(dpkg --get-selections | grep hold | grep linux-image-2.6-sidux-686 | cut -f1)" ]; then
			echo disabled
		else
			echo enabled
		fi
	else
		echo disabled
	fi
		
}


enableMetapackage()
{
	if [ ! -f /usr/share/doc/linux-image-2.6-sidux-686/copyright ]; then
		apt-get install linux-image-2.6-sidux-$(kernelType) linux-headers-2.6-sidux-$(kernelType)
	fi

	echo linux-image-2.6-sidux-686 install|dpkg --set-selections
	echo linux-headers-2.6-sidux-686 install|dpkg --set-selections

	for i in $( ls /usr/share/doc/ | grep modules-2.6-sidux ); do
        echo $i install|dpkg --set-selections
	done

	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}


disableMetapackage()
{
	for i in $( ls /usr/share/doc/ | grep 2.6-sidux ); do
		echo $i hold|dpkg --set-selections
	done
}


function getOldKernels()
{
	pushd /boot 2>&1 >>/dev/null
	for v in vmlinuz-*; do
		Kernel=$(echo $v|sed s/vmlinuz-//)
		if [ "${Kernel}" != "$(uname -r)" ]; then
			echo $Kernel
		fi
	done
	popd 2>&1 >> /dev/null
}


function getKernelDirs()
{
	if [ -d /usr/src/kernel-downloads ]; then
		cd /usr/src/kernel-downloads
		ls -d */
	fi
}


function ssftKernel()
{
	while true;
	do
		ssft_menu "${Title}" "$(eval_gettext "Please make your choice:")" \
			"$(eval_gettext "run kernel-remover")" \
			"$(eval_gettext "update kernel")"
	
		case $SSFT_RESULT in
			"$(eval_gettext "run kernel-remover")" ) kernel-remover;;
			"$(eval_gettext "update kernel")"      )  installKernel;;
			"") break;;
		esac
	done
}



