# siduxcc-module: software
# Copyright (c) 2007 Fabian Wuertz
# License GPL 2
# siduxcc is based on knxcc from Andreas Loibl


#run gettext
. /usr/bin/gettext.sh

register_module software $(eval_gettext "Software")

function checkRunlevel()
{
	local rlc=$( echo $( runlevel ) | wc -w ) response='' wmRunning=''
	local RunLvl=$( echo $(runlevel) | cut -d " " -f $rlc ) sleepTime=6
	echo $RunLvl;
}

function du()
{
	apt-get update
	apt-get dist-upgrade
}

function ssftDu()
{
	test=`checkRunlevel`
	if [ $test != '3' ] 
	then
		ssft_display_message "${Title}" "$(eval_gettext "You must be in runlevel 3 and out of X to run this script.")"
		return 0
	fi
	test=`duWarnings`
	if [ $test == 'disconnected' ]; then
		ssft_yesno "$(eval_gettext "No connection to sidux.com. It wasn't possible to test if there any Dist-Upgrade Warnings. Dou want to continuo anyway?")" 
		if [ $SSFT_RESULT = 0 ]; then
			du
		else
			return 0
		fi
	elif [ $test != '' ]
	then
		ssft_display_message "${Title}" "$(eval_gettext "There are DU-warnings please. Don't make a dist-Upgrade! Please visit sidux.com for more information!")"
		return 0
	else
		ssft_display_message "${Title}" "$(eval_gettext "At the moment there are no DU-warnings!")"
		du
	fi
}


function checkASV()
{
	# check if apt-show-versions is installed
	if [ ! -f /usr/bin/apt-show-versions ]; then
		echo missing
	else
		echo installed
	fi
}


function download()
{
	apt-get -dy dist-upgrade
	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}

function update()
{
	apt-get update
	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}

function clean()
{
	apt-get clean
	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}


function installASV()
{
	apt-get update
	apt-get install apt-show-versions
	echo ""
	echo "$(eval_gettext "Process done!")"
	echo "$(eval_gettext "Press <Enter> to continue...")"
	read
}

function duWarnings()
{
	TMP="$(mktemp -p /tmp/ du-warning-XXXXXXXXXX)"
	wget -O $TMP -q -U "siduxcc-hermes" http://sidux.com/xBackends.php
	tmp=`cat $TMP`
	if [ -n "$tmp" ]; then 
		egrep title $TMP | grep WARNING | cut -f2 -d"<" | cut -c7-
		egrep title $TMP | grep Warning | cut -f2 -d"<" | cut -c7-
	else
		echo "disconnected"
	fi
	rm -f $TMP
}

function duWarningsEn()
{
	TMP="$(mktemp -p /tmp/ du-warning-XXXXXXXXXX)"
	wget -O $TMP -q -U "siduxcc-hermes" http://sidux.com/backend.php
	grep -A 1 Warning $TMP
	rm -f $TMP
}

function duWarningsDe()
{
	TMP="$(mktemp -p /tmp/ du-warning-XXXXXXXXXX)"
	wget -O $TMP -q -U "siduxcc-hermes" http://sidux.com/backend.php?newlang=deu
	grep -A 1 Warnung $TMP
	rm -f $TMP
}



function getSmxiAlerts()
{
	TMP="$(mktemp -p /tmp/ sidux-news-XXXXXXXXXX)"
	wget -O $TMP -q -U "siduxcc-hermes" http://techpatterns.com/downloads/distro/alert_message
	cat $TMP
	rm -f $TMP
}

function getNewsEn()
{
	TMP="$(mktemp -p /tmp/ sidux-news-XXXXXXXXXX)"
	wget -O $TMP -q -U "siduxcc-hermes" http://sidux.com/backend.php
	grep -A 1 title $TMP | grep -B 1 link
	rm -f $TMP
}

function getNewsDe()
{
	TMP="$(mktemp -p /tmp/ sidux-news-XXXXXXXXXX)"
	wget -O $TMP -q -U "siduxcc-hermes" http://sidux.com/backend.php?newlang=deu
	grep -A 1 title $TMP | grep -B 1 link
	rm -f $TMP
}

function ssftDuWarnings()
{
	test=`duWarnings`
	if [ $test == 'disconnected' ] 
	then
		ssft_display_message "$(eval_gettext "No connection to sidux.com. It wasn't possible to test if there any Dist-Upgrade Warnings")"
	elif [ $test != '' ]
	then
		ssft_display_message "${Title}" "$(eval_gettext "There are DU-warnings please. Don't make a dist-Upgrade! Please visit sidux.com for more information!")"
	else
		ssft_display_message "${Title}" "$(eval_gettext "At the moment there are no DU-warnings!")"
	fi
}

function dlgDuLog
{
	DATE=$(dlg --calendar "$(eval_gettext "Please choose a date...")" 0 0 0 0 0)
	case $? in
	0)
		day=`echo $DATE | cut -f1 -d"/"`
		month=`echo $DATE | cut -f2 -d"/"`
		year=`echo $DATE | cut -f3 -d"/"`
		clear
		cat /var/log/dpkg.log | grep $year-$month-$day| grep installed | less;;
	esac
}


function addSources()
{
	# this function adds sources to install non-free firmware
	# this function is based on install-meta from Horst Tritremmel <hjt@sidux.com>

	[ -z "$(grep deb\ .*debian\.org.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb \(.*\)debian.org\/debian unstable \(.*\)/deb \1debian.org\/debian unstable main contrib non-free/' /etc/apt/sources.list || echo found deb *contrib in sources.list for debian

	[ -z "$(grep deb\ .*debian\.org.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb \(.*\)debian.org\/debian\/ sid \(.*\)/deb \1debian.org\/debian\/ sid main contrib non-free/' /etc/apt/sources.list || echo found deb *contrib in sources.list for debian

	[ -z "$(grep deb-src\ .*debian\.org.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb-src \(.*\)debian.org\/debian unstable \(.*\)/deb-src \1debian.org\/debian unstable main contrib non-free/' /etc/apt/sources.list || echo found deb-src *contrib in sources.list for debian

	[ -z "$(grep deb-src\ .*debian\.org.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb-src \(.*\)debian.org\/debian\/ sid \(.*\)/deb-src \1debian.org\/debian\/ sid main contrib non-free/' /etc/apt/sources.list || echo found deb-src *contrib in sources.list for debian

	[ -z "$(grep deb\ .*sidux\.com.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb \(.*\)sidux.com\/debian\/ sid \(.*\)/deb \1sidux.com\/debian\/ sid main contrib non-free fix.main fix.contrib fix.non-free/' /etc/apt/sources.list || echo found deb *contrib in sources.list for sidux

	[ -z "$(grep deb-src\ .*sidux\.com.*main.*contrib /etc/apt/sources.list)" ] && sed -ie 's/deb-src \(.*\)sidux.com\/debian\/ sid \(.*\)/deb-src \1sidux.com\/debian\/ sid main contrib non-free fix.main fix.contrib fix.non-free/' /etc/apt/sources.list || echo found deb-src *contrib in sources.list for sidux
}



function ssftSoftware()
{
	while true;
	do
		ssft_menu "${Title}" "$(eval_gettext "Please make your choice:")" \
			"$(eval_gettext "Run smxi (software update)")" \
			"$(eval_gettext "Run dist-upgrade")" \
			"$(eval_gettext "Show DU warnings")" \
			#"$(eval_gettext "Show DU log")"
	
		case $SSFT_RESULT in
			"$(eval_gettext "Run smxi (software update)")" ) smxi;;
			"$(eval_gettext "Run dist-upgrade")"           ) ssftDu;;
			"$(eval_gettext "Show DU warnings")"           ) ssftDuWarnings;;
			#"$(eval_gettext "Show DU log")"                ) ssftDuLog;;
			"") break;;
		esac
	done
}