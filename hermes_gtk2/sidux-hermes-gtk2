#!/usr/bin/env python
#-*- encoding:utf-8 -*-
#
# sidux-hermes-gtk2
# siduxcc-hermes (sidux dist-upgrade alerter)
# A GTK tray application for sidux
# (c) Fabian Wuertz <xadras@sidux.com>
# License: GPL


import os
import gtk
import gobject

GPL = open( '/usr/share/common-licenses/GPL', 'r' ).read()

class MyStatusIcon(gtk.StatusIcon):

        def __init__(self):

                gtk.about_dialog_set_url_hook(self.showUrl, "http://sidux.com")
                gtk.StatusIcon.__init__(self)

                # menu&actions
                menu = '''
                        <ui>
                          <menubar name="Menubar">
                            <menu action="Menu">
                               <menuitem action="About"/>
                               <separator/>
                               <menuitem action="Quit"/>
                            </menu>
                          </menubar>
                        </ui>
                '''
                actions = [
                          ('Menu',  None, 'Menu'),
                          ('About', gtk.STOCK_ABOUT, 'About', None, 'About', self.on_about),
                          ('Quit', gtk.STOCK_QUIT, 'Quit', None, 'Quit', self.on_quit)
                  ]
                ag = gtk.ActionGroup('Actions')
                ag.add_actions(actions)
                self.manager = gtk.UIManager()
                self.manager.insert_action_group(ag, 0)
                self.manager.add_ui_from_string(menu)
                self.menu = self.manager.get_widget('/Menubar/Menu/About').props.parent
                self.connect('activate', self.on_activate)
                self.connect('popup-menu', self.on_popup_menu)

                # tooltip&visible
                self.set_tooltip('sidux-hermes')
                self.set_visible(True)

                # update icon
                self.updateIcon()

        def on_activate(self, data):
                print 'on_activate'

        def on_popup_menu(self, status, button, time):
                self.menu.popup(None, None, None, button, time)

        def updateIcon(self):
            stdout_handle = os.popen("siduxcc software duWarnings", "r")
            text = stdout_handle.read()
            if text == '':
                self.set_from_file('/usr/share/siduxcc/icons/ok-hermes.png')
            else:
                self.set_from_file('/usr/share/siduxcc/icons/notok-hermes.png')
            self.timeoutId  = gobject.timeout_add(1800000, self.updateIcon) # 1800000msec = 30min


        def on_action(self, data):
                print 'on_action'

        def on_about(self, data):
                self.dialog = gtk.AboutDialog()
                self.dialog.set_name('siduxcc-hermes (sidux dist-upgrade alerter)')
                #dialog.set_version('0.1')
                self.dialog.set_authors( ['Fabian Wuertz <xadras@sidux.com>'] )
                self.dialog.set_license( GPL)
                self.dialog.set_comments('A GTK tray application for sidux')
                self.dialog.set_website_label("http://sidux.com")
                #self.dialog.set_website('http://sidux.com')
                self.dialog.run()
                self.dialog.destroy()

        def showUrl(self, arg1, arg2, arg3):
                os.system('x-www-browser '+arg3+'&')

        def on_quit(self, data):
                print 'Exit'
                gtk.main_quit()


if __name__ == '__main__':
        MyStatusIcon()
        gtk.main()
